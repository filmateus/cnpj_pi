---
format:
  pdf:
    colorlinks: true
fontsize: 11pt
header-includes:
  - \usepackage[utf8]{inputenc} #Codificacao do documento (conversão automática dos acentos)
  - \usepackage{float} 
  - \usepackage{setspace}\spacing{0.75}
  - \setmainfont{Times New Roman}
  - \usepackage[brazilian]{babel}
---

# Introdução

Esse estudo é realizado tendo como base de dados o cadastro de CNPJ's (Cadastro Nacional de Pessoas Jurídicas), mas referente aqueles que 

```{r}
#| include: false
#| message: false
#| warning: false
#| results: hide


knitr::opts_chunk$set(
  fig.width=12, fig.height=6,
  #out.width = "100%",
  cache = TRUE,
  #echo = FALSE,
  message = FALSE,
  warning = FALSE,
  hiline = TRUE,
  cache.lazy = FALSE,
  fig.pos = "H"
)

library(formattable)
library(tidyverse)
library(lubridate)
library(sf)
```


```{r}
# carregando os arquivos
empresas = read.csv('bq-empresas.csv')
#filtrando para retirar entidades públicas e candicadatos
nat_jud = qsacnpj::tab_natureza_juridica
nat_jud$cod_subclass_natureza_juridica = as.numeric(nat_jud$cod_subclass_natureza_juridica)
empresas = empresas|>
        dplyr::left_join(nat_jud, by = c("natureza_juridica" = "cod_subclass_natureza_juridica"))|>
        dplyr::filter(nm_natureza_juridica %in% c("Entidades Empresariais"))|>
        dplyr::distinct()

estabelecimentos = read.csv('bq-estabelicimentos.csv')
estabelecimentos = estabelecimentos|>
    dplyr::semi_join(empresas, by = "cnpj_basico")

socios = read.csv('bq-socios.csv')
# qsacnpj::tab_cnpj_entes_publicos_br
responsvel = qsacnpj::tab_qualificacao_responsavel_socio
sit_cad = qsacnpj::tab_situacao_cadastral
nat_jud = qsacnpj::tab_natureza_juridica
empresas_pi_atual = estabelecimentos|>
                dplyr::filter(situacao_cadastral == 2,
                identificador_matriz_filial == 1)
```

## Início  e fim das atividades das empresas no Piauí por Ano

```{r}
#inicio das atividade
inicio_atividade = estabelecimentos|>
    dplyr::filter(identificador_matriz_filial == 1)|>
    dplyr::mutate(data_inicio_atividade = ymd(data_inicio_atividade))|>
    dplyr::mutate(mes_atividade = floor_date(data_inicio_atividade, "quarter"),
                  ano_atividade = floor_date(data_inicio_atividade, "year"))|>
    dplyr::filter(mes_atividade >= "1954-01-01", 
                 mes_atividade <= "2022-10-01")|>
    count(ano_atividade)|>
    dplyr::mutate(mes_atividade = ano_atividade)|>
    filter(year(mes_atividade) >= 1963,
           year(mes_atividade) <= 2022)

# fim das atividade
fim_atividade = estabelecimentos|>
    dplyr::filter(situacao_cadastral == 8, identificador_matriz_filial == 1)|>
    dplyr::mutate(data_situacao_cadastral = ymd(data_situacao_cadastral))|>
    dplyr::mutate(mes_atividade = floor_date(data_situacao_cadastral, "quarter"),
                  ano_atividade = floor_date(data_situacao_cadastral, "year"))|>
    dplyr::filter(mes_atividade >= "1954-01-01", 
                 mes_atividade <= "2022-10-01")|>
    count(ano_atividade)|>
    dplyr::mutate(mes_atividade = ano_atividade)|>
    filter(year(mes_atividade) >= 1963,
           year(mes_atividade) <= 2022)

#gráfico comparativo
inicio_atividade|>
  left_join(fim_atividade, by = "mes_atividade")|>
  dplyr::mutate(n.y = replace_na(n.y, 0))|>
  dplyr::select(mes_atividade, n.x, n.y)|>
  reshape2::melt(id = c("mes_atividade"))|>
  dplyr::mutate(variable = str_replace(variable,"n.x", "Início"),
                variable = str_replace(variable,"n.y", "Baixa"))|>
  dplyr::rename("Atividade" = "variable")|>
  ggplot(aes(x = mes_atividade, y = value/1000, color = Atividade))+
    geom_line(size=1)+
    theme_minimal(10)+
    scale_color_manual(values = c("red","gold"))+
    scale_x_date(breaks = scales::date_breaks("3 year"),
                 labels = scales::date_format("%Y"))+
    labs(x = "Ano",
         y = "Quantidade de empresas(milhares)") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1, size=10),
          axis.title.x = element_text(size=20),
          axis.title.y = element_text(size=20),
          legend.key.size = unit(1.3, 'cm'),
          legend.key.width = unit(1,"cm"),
          legend.title = element_text(size=15),
          legend.text = element_text(size=10),
          panel.grid.minor.x = element_blank())
```

- motivo do número  de cancelamentos em 2008:
https://crc-se.jusbrasil.com.br/noticias/3148127/pessoas-juridicas-inaptas-terao-seu-cnpj-cancelado. No dia 31/12/2008, ocorreu a baixa de 25595 cnpjs no Piauí.


\newpage

# Tempo de funcionamento, em anos, de empresas que tiveram baixa no cnpj

```{r}
periodo = 
estabelecimentos|>
        dplyr::mutate(data_situacao_cadastral = ymd(data_situacao_cadastral),
                      data_inicio_atividade = ymd(data_inicio_atividade))|>
        dplyr::filter(situacao_cadastral == 8,
        identificador_matriz_filial == 1)|>
        dplyr::mutate(Período  = lubridate::interval(data_inicio_atividade, data_situacao_cadastral)/years(1))|>
        dplyr::select(Período)|>
        dplyr::mutate(Período = round(as.numeric(Período), 2))
        
ggplot(periodo, aes(x = Período))+
geom_histogram(binwidth=1, colour = "black", fill = "gold")+
theme_classic()

summary(periodo$Período)
```

\newpage

# Tipo de empresa em atividade 

## Existem alguns ítem no comercio de reparação de veículos que não podem classificados como de veículo, utiliza outra classificação, a CNAE

```{r}
#| fig-align: center

cnae = qsacnpj::tab_cnae
cnae$cod_cnae = as.integer(cnae$cod_cnae)
nm_division = empresas_pi_atual|>
              dplyr::rename("cod_cnae" = "cnae_fiscal_principal")|>
              left_join(cnae, "cod_cnae")|>
              count(cod_cnae, nm_secao, nm_divisao, nm_grupo, nm_classe, nm_cnae)|>
              replace_na(list(nm_secao = "Vazio", nm_divisao = "Vazio",
                  nm_grupo = "Vazio", nm_classe = "Vazio",
                  nm_cnae = "Vazio"))

nm_division|>
  dplyr::mutate(tipo = fct_lump(nm_grupo,10, other_level = "Outras")) %>% 
  dplyr::count(tipo) %>%
  dplyr::mutate(tipo = fct_reorder(str_wrap(tipo, 38), n))|>
  dplyr::mutate(prop = percent(n/sum(n)))|>
  ggplot(aes(x = tipo, y = n/1e3))+
  geom_col(fill = 'gold', alpha = .9, width = 0.9) +
    coord_flip() +
    geom_text(aes(label = prop), nudge_y = 0.015) +
    theme_minimal(7.25) +
    labs(x = "Atividade principal", 
         y = "Quantidade de empresas (milhares)")+
    theme(axis.title.x = element_text(size=20),
          axis.title.y = element_text(size=20),
          axis.text.x = element_text(size = 10),
          axis.text.y = element_text(size = 10)
          )
```

## Treemap para atividades de `industria de transformação`

```{r}
#install.packages("treemapify", dependencies = T)
library(treemapify)

nm_division|>
  dplyr::filter(nm_secao == 'INDÚSTRIAS DE TRANSFORMAÇÃO')|>
  dplyr::mutate(tipo = fct_lump(nm_divisao,11, other_level = "Outras")) %>% 
  count(tipo)|>
  dplyr::mutate(tipo = fct_reorder(str_wrap(tipo, 20), n))|>
  ggplot(aes(area = n, fill = tipo, label = tipo))+
  geom_treemap()+
  geom_treemap_text(colour = "black",
                    place = "topleft",
                    size = 12) +
  theme(legend.position = "none")
```

## Treemap para atividades de `COMÉRCIO REPARAÇÃO DE VEÍCULOS AUTOMOTORES E MOTOCICLETAS`

```{r}
nm_division|>
  dplyr::filter(nm_secao == 
                'COMÉRCIO REPARAÇÃO DE VEÍCULOS AUTOMOTORES E MOTOCICLETAS')|>
  dplyr::mutate(tipo = fct_lump(nm_grupo ,8, other_level = "Outras")) |>
  count(tipo)|>
  dplyr::mutate(tipo = fct_reorder(str_wrap(tipo, 20), n))|>
  ggplot(aes(area = n, fill = tipo, label = tipo))+
  geom_treemap()+
  geom_treemap_text(
                    place = "topleft",
                    size = 15)+
   scale_fill_brewer(palette = "YlOrBr")+
  theme(legend.position = "none")
```

\newpage

# Empresas por Cidade

```{r}
#| results: hide
#| warning: false
#| message: false
#| cache: true
#| fig-align: center
#| fig-width: 12 
#| fig-height: 10


library(geobr)

all_mun_pi <- read_municipality(code_muni=22, year=2018)

dates_pi = empresas_pi_atual|>
            group_by(id_municipio)|>
            summarise("Quantidade" = n())|>
            dplyr::mutate("Percentual" = percent(Quantidade*100/sum(Quantidade)))|>
            #dplyr::rename("code_muni" = "id_municipio")|>
            dplyr::left_join(all_mun_pi, by=c("id_municipio"= "code_muni"))

min_empresas = min(dates_pi$Quantidade)
max_empresas = max(dates_pi$Quantidade)
min_percentual = min(dates_pi$Percentual)
max_percentual = max(dates_pi$Percentual)

ggplot() +
geom_sf(data = dates_pi,  aes(fill=Percentual, geometry = geom))+
scale_fill_viridis_c(direction = -1, limits = c(min_percentual,max_percentual))+
labs(title= "Empresas por cidade - 2022",
     subtitle = "Percentual") +
theme_bw()
```


\newpage


# Abertura de empresas entre interior e Capital

```{r}
estabelecimentos|>
    #left_join(empresas, "cnpj_basico")|>
    dplyr::filter(identificador_matriz_filial == 1)|>
    dplyr::mutate(data_inicio_atividade = ymd(data_inicio_atividade))|>
    dplyr::mutate(mes_atividade = floor_date(data_inicio_atividade, "quarter"),
                  ano_atividade = floor_date(data_inicio_atividade, "year"),
                  Localicação = case_when(id_municipio == 2211001 ~ "Capital",
                                          id_municipio != 2211001 ~ "Interior"))|>
    dplyr::filter(mes_atividade >= "1954-01-01", 
                 mes_atividade <= "2022-10-01")|>
    count(ano_atividade,Localicação)|>
    na.omit()|>
    ggplot(aes(x = ano_atividade, y = n, color = Localicação))+
    geom_line(size=1)+
    theme_minimal(10)+
    scale_x_date(breaks = scales::date_breaks("3 year"),
                 labels = scales::date_format("%Y"))+
    labs(x = "Ano",
         y = "Quantidade de empresas") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1, size=10),
          axis.title.x = element_text(size=20),
          axis.title.y = element_text(size=20),
          legend.key.size = unit(1.3, 'cm'),
          legend.key.width = unit(1,"cm"),
          legend.title = element_text(size=15),
          legend.text = element_text(size=10),
          panel.grid.minor.x = element_blank())
```

\newpage

# Bairros com mais empresas em Teresina 

- Obs.: Existem muitos nomes de bairros repetidos mas com gráfia diferente, o que gera uma lista muito grande. Usamos funções que retiram os acentos e espaços a esquerda ou direita para diminuir as diferenças.


```{r}
empresas_pi_atual|>
  filter(id_municipio == 2211001)|>
  dplyr::mutate(bairro = stringi::stri_trans_general(str = bairro, id = "Latin-ASCII"))|> # remove acentos
  dplyr::mutate(bairro = str_trim(bairro, "right"),# remove espaços a direita
                bairro = str_trim(bairro, "left"))|> # remove espaços a esqueda
  dplyr::mutate(Região = fct_lump(bairro ,20, other_level = "Outras"))|>
  count(Região)|>
  arrange(desc(n))|>
  knitr::kable()
```

\newpage

# Capital Social

```{r}
#| fig-align: center
empresas_pi_atual|>
    left_join(empresas, "cnpj_basico")|>#View()
    dplyr::mutate(capital_social_cat = cut(capital_social/1e3, 
                                           breaks = c(0, 1e3, 1e4, 1e5, 1e6, Inf)/1e3,
                                           include.lowest = TRUE, dig.lab = 10))|>
    count(tipo = capital_social_cat) |>
    dplyr::mutate(prop = percent(n/sum(n)),
                  tipo = fct_rev(tipo))|>
    ggplot(aes(x = tipo, y = n / 1e3)) +
    geom_col(fill = "gold", alpha = .9) +
    coord_flip() +
    geom_text(aes(label = prop), nudge_y = 3.5) +
    theme_minimal(14) +
    labs(x = "Capital social (milhares de reais)", 
         y = "Quantidade de empresas (milhares)")
```

\newpage

# Natureza jurídica

```{r}
#| fig-align: center
nat_jud$cod_subclass_natureza_juridica = as.integer(nat_jud$cod_subclass_natureza_juridica)

empresas_pi_atual|>
    left_join(empresas, "cnpj_basico")|>
    replace_na(
      list(nm_natureza_juridica = "Vazio", 
      nm_subclass_natureza_juridica = "Vazio"))|>
      mutate(tipo = if_else(
                          nm_natureza_juridica == "Administração Pública",
                          "Administração Pública", nm_subclass_natureza_juridica
                          ),
    tipo = fct_lump(tipo, 10, other_level = "Outros"))|>
    count(tipo)|>
    dplyr::mutate(prop = percent(n/sum(n)),
                  tipo = fct_reorder(str_wrap(tipo, 38), n))|>
    ggplot(aes(x = tipo, y = n/ 1e3)) +
    geom_col(fill = "gold", alpha = .9, width = 0.9) +
    coord_flip() +
    geom_text(aes(label = prop), nudge_y = 7) +
    theme_minimal(7.25) +
    labs(x = "Natureza Jurídica", 
         y = "Quantidade de empresas (milhares)")+
    theme(axis.title.x = element_text(size=20),
          axis.title.y = element_text(size=20),
          axis.text.y = element_text(size = 10),
          )
```

\newpage

# Quantidade de Sócios

```{r}
#| fig-align: center

join_socios_empresas = empresas_pi_atual|>
    left_join(socios, "cnpj_basico")

join_socios_empresas|>
    count(cnpj_basico)|>
    dplyr::mutate(n = fct_lump(str_pad(n, 2, "left", 0), 4, 
                      other_level = "5 ou mais"))|>
    dplyr::mutate(n= fct_lump(n, 10, other_level = "11 ou mais"))|>
    count(n) |>
    mutate(prop = percent(nn/sum(nn)), n = fct_rev(n)) |>
    ggplot(aes(x = n, y = nn / 1e3)) +
    geom_col(fill = "gold", alpha = .9) +
    coord_flip() +
    geom_text(aes(label = prop), nudge_y = 11) +
    theme_minimal(15) +
    labs(x = "Quantidade de sócios", 
         y = "Quantidade de empresas (milhares)")
```

\newpage

# Idade dos Sócios

```{r}
#| fig-align: center

join_socios_empresas|>
  dplyr::filter(!is.na(faixa_etaria))|>
  dplyr::filter(faixa_etaria >0)|>
  dplyr::mutate(Idade = case_when(
        faixa_etaria == 1 ~ "0 a 12 anos",
        faixa_etaria == 2 ~ "13 a 20 anos",
        faixa_etaria == 3 ~ "21 a 30 anos",
        faixa_etaria == 4 ~ "31 a 40 anos",
        faixa_etaria == 5 ~ "41 a 50 anos",
        faixa_etaria == 6 ~ "51 a 60 anos",
        faixa_etaria == 7 ~ "61 a 70 anos",
        faixa_etaria == 8 ~ "71 a 80 anos",
        faixa_etaria == 9 ~ "80 anos ou mais" ))|>
  count(Idade)|>
  dplyr::mutate(prop = percent(n/sum(n)),
                Idade = fct_rev(Idade))|>
  ggplot(aes(x = Idade, y = prop)) +
  geom_col(fill = "gold", alpha = .9) +
  coord_flip() +
  geom_text(aes(label = prop), nudge_y = 0.01) +
  theme_minimal(14) +
  labs(x = "Faixa etária", 
         y = "Proporção")
```


# Sexo dos proprietários:

obs.: na tabela não tem o sexo do proprietários, então fizemos uma pesquisa de acordo com o nome na tabela sócios usando o pacote `get_gender` e função `genderBR`. 


```{r}
# Pegando primeiro nome
teste = sapply(strsplit(as.character(join_socios_empresas$nome),' '), "[", 1)

# contando os valores ausentes
table(is.na(teste))

# deletando valores NA
teste = na.omit(teste)

# presumindo o sexo 
sexo = genderBR::get_gender(teste)

# contando valores ausentes sexo 
table(is.na(sexo))

# deletando valores NA
sexo = na.omit(sexo)

# determinando o sexo
sexo|>table()|>prop.table()|>percent()
```

\newpage

# Atividades reunião 05/12/22

## Atividades fechadas

```{r}
empresas_5 = estabelecimentos|>
                dplyr::filter(identificador_matriz_filial == 1,
                              data_situacao_cadastral >= '2017-10-01')
empresas_5|>
  dplyr::filter(situacao_cadastral == 8)|>
  dplyr::rename("cod_cnae" = "cnae_fiscal_principal")|>
  left_join(cnae, "cod_cnae")|>
  count(nm_secao, nm_divisao, nm_grupo, nm_classe, nm_cnae)|>
  replace_na(list(nm_secao = "Vazio", nm_divisao = "Vazio",
      nm_grupo = "Vazio", nm_classe = "Vazio",
      nm_cnae = "Vazio"))|>
  dplyr::mutate(tipo = fct_lump(nm_secao,12, other_level = "Outras")) %>% 
  dplyr::count(tipo) %>%
  dplyr::mutate(tipo = fct_reorder(str_wrap(tipo, 38), n))|>
  dplyr::mutate(prop = percent(n/sum(n)))|>
  ggplot(aes(x = tipo, y = n/1e3))+
  geom_col(fill = 'gold', alpha = .9, width = 0.9) +
    coord_flip() +
    geom_text(aes(label = prop), nudge_y = 0.020) +
    theme_minimal(7.25) +
    labs(x = "Atividade principal", 
         y = "Quantidade de empresas (milhares)")+
    theme(axis.title.x = element_text(size=20), axis.title.y = element_text(size=20),
          axis.text.x = element_text(size = 10),axis.text.y = element_text(size = 10))
```

## Atividades abertas

```{r}
empresas_5|>
  dplyr::filter(situacao_cadastral == 1)|>
  dplyr::rename("cod_cnae" = "cnae_fiscal_principal")|>
  left_join(cnae, "cod_cnae")|>
  count(nm_secao, nm_divisao, nm_grupo, nm_classe, nm_cnae)|>
  replace_na(list(nm_secao = "Vazio", nm_divisao = "Vazio",
      nm_grupo = "Vazio", nm_classe = "Vazio",
      nm_cnae = "Vazio"))|>
  dplyr::mutate(tipo = fct_lump(nm_secao,12, other_level = "Outras")) %>% 
  dplyr::count(tipo) %>%
  dplyr::mutate(tipo = fct_reorder(str_wrap(tipo, 38), n))|>
  dplyr::mutate(prop = percent(n/sum(n)))|>
  ggplot(aes(x = tipo, y = n/1e3))+
  geom_col(fill = 'gold', alpha = .9, width = 0.9) +
    coord_flip() +
    geom_text(aes(label = prop), nudge_y = 0.0020) +
    theme_minimal(7.25) +
    labs(x = "Atividade principal", 
         y = "Quantidade de empresas (milhares)")+
    theme(axis.title.x = element_text(size=20),axis.title.y = element_text(size=20),
          axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10))
```

\newpage

## Relação Natureza jurídica e Tipo de atividade

- não é importante realizar essa relação entre natureza e tipo de atividade, como estamos trabalhandos com o criação de empresas, as `naturezas jurídicas` serão *entidades empreserial*

```{r}
empresas_5|>
    left_join(empresas, "cnpj_basico")|>
    #left_join(nat_jud, by=c("natureza_juridica"= "cod_subclass_natureza_juridica"))|>
    replace_na(list(nm_natureza_juridica = "Vazio", 
                    nm_subclass_natureza_juridica = "Vazio")) |>
    mutate(tipo = if_else(nm_natureza_juridica == "Administração Pública",
                          "Administração Pública", nm_subclass_natureza_juridica))|>
    count(tipo, nm_natureza_juridica)|>
    dplyr::mutate(prop = percent(n/sum(n)))|>
    arrange(desc(n))|>
    knitr::kable()
```

\newpage

# Natureza, atividade por bairro de Teresina Ver também o capital social..

## Quantidade de empresas por Região da Cidade

```{r}
bairros = "bairros.xlsx"|>
          readxl::read_xlsx()|>
          dplyr::mutate(Bairro = stringi::stri_trans_general(str = Bairro, id = "Latin-ASCII"), # remove acentos,
                        Bairro = str_trim(Bairro, "right"),# remove espaços a direita
                        Bairro = str_trim(Bairro, "left"), # remove espaço a esquerda
                        Bairro = toupper(Bairro)) # bota todas as letras em caixas alta

empresa_bairro_the = empresas_pi_atual|>
                      filter(id_municipio == 2211001)|>
                      dplyr::mutate(bairro = stringi::stri_trans_general(str = bairro, id = "Latin-ASCII"), # remove acentos
                                    bairro = str_trim(bairro, "right"),# remove espaços a direita
                                    bairro = str_trim(bairro, "left"))|> # remove espaços a esqueda
                      dplyr::left_join(bairros, by = c("bairro" = "Bairro"))|>
                      dplyr::distinct()|>
                      drop_na(Região)|> #6643 NA's
                      count(Região)|>
                      dplyr::mutate(prop = percent(n/sum(n)))

empresa_bairro_the|>knitr::kable()
```

\newpage


## Média por Bairro

```{r}
empresas_pi_atual|>
      left_join(empresas, "cnpj_basico")|>
      filter(id_municipio == 2211001)|>
      dplyr::mutate(bairro = stringi::stri_trans_general(str = bairro, id = "Latin-ASCII"), # remove acentos
                    bairro = str_trim(bairro, "right"),# remove espaços a direita
                    bairro = str_trim(bairro, "left"))|> # remove espaços a esqueda
      dplyr::left_join(bairros, by = c("bairro" = "Bairro"))|>
      group_by(Região)|>
      summarise(`Média Capital` = mean(capital_social), Máximo = max(capital_social))|>
      knitr::kable()
```

```{r}
empresas_pi_atual|>
      left_join(empresas, "cnpj_basico")|>
      filter(id_municipio == 2211001)|>
      dplyr::mutate(bairro = stringi::stri_trans_general(str = bairro, id = "Latin-ASCII"), # remove acentos
                    bairro = str_trim(bairro, "right"),# remove espaços a direita
                    bairro = str_trim(bairro, "left"))|> # remove espaços a esqueda
      dplyr::left_join(bairros, by = c("bairro" = "Bairro"))|>
      dplyr::arrange(desc(capital_social))|>
      select(razao_social, capital_social, bairro, Região)|>
      head(30)|>knitr::kable()
```



\newpage 

# Evolução das empresas por região da cidade 

```{r}
estabelecimentos|>
    #left_join(empresas, "cnpj_basico")|>
    filter(id_municipio == 2211001)|>
    dplyr::mutate(bairro = stringi::stri_trans_general(str = bairro, id = "Latin-ASCII"), # remove acentos
                  bairro = str_trim(bairro, "right"),# remove espaços a direita
                  bairro = str_trim(bairro, "left"))|> # remove espaços a esqueda
    dplyr::left_join(bairros, by = c("bairro" = "Bairro"))|>
    dplyr::filter(identificador_matriz_filial == 1)|>
    dplyr::mutate(data_inicio_atividade = ymd(data_inicio_atividade))|>
    dplyr::mutate(mes_atividade = floor_date(data_inicio_atividade, "quarter"),
                  ano_atividade = floor_date(data_inicio_atividade, "year"))|>
    dplyr::filter(mes_atividade >= "1954-01-01", 
                 mes_atividade <= "2022-10-01")|>
    count(ano_atividade,Região)|>
    na.omit()|>
    ggplot(aes(x = ano_atividade, y = n, color = Região))+
    geom_line(size=1)+
    theme_minimal(10)+
    scale_x_date(breaks = scales::date_breaks("3 year"),
                 labels = scales::date_format("%Y"))+
    labs(x = "Ano",
         y = "Quantidade de empresas") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1, size=10),
          axis.title.x = element_text(size=20),
          axis.title.y = element_text(size=20),
          legend.key.size = unit(1.3, 'cm'),
          legend.key.width = unit(1,"cm"),
          legend.title = element_text(size=15),
          legend.text = element_text(size=10),
          panel.grid.minor.x = element_blank())
```
\newpage

# Fechamento de empresas

```{r}
estabelecimentos|>
    left_join(empresas, "cnpj_basico")|>
    #filter(id_municipio == 2211001)|>
    dplyr::mutate(bairro = stringi::stri_trans_general(str = bairro, id = "Latin-ASCII"), # remove acentos
                  bairro = str_trim(bairro, "right"),# remove espaços a direita
                  bairro = str_trim(bairro, "left"))|> # remove espaços a esqueda
    dplyr::left_join(bairros, by = c("bairro" = "Bairro"))|>
    dplyr::filter(situacao_cadastral == 8, identificador_matriz_filial == 1)|>
    dplyr::mutate(data_situacao_cadastral = ymd(data_situacao_cadastral))|>
    dplyr::mutate(mes_atividade = floor_date(data_situacao_cadastral, "quarter"),
                  ano_atividade = floor_date(data_situacao_cadastral, "year"))|>
    dplyr::filter(mes_atividade >= "1954-01-01", 
                 mes_atividade <= "2022-10-01")|>
    count(ano_atividade,Região)|>
    na.omit()|>
    ggplot(aes(x = ano_atividade, y = n, color = Região))+
    geom_line(size=1)+
    theme_minimal(10)+
    scale_x_date(breaks = scales::date_breaks("3 year"),
                 labels = scales::date_format("%Y"))+
    labs(x = "Ano",
         y = "Quantidade de empresas") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1, size=10),
          axis.title.x = element_text(size=20),
          axis.title.y = element_text(size=20),
          legend.key.size = unit(1.3, 'cm'),
          legend.key.width = unit(1,"cm"),
          legend.title = element_text(size=15),
          legend.text = element_text(size=10),
          panel.grid.minor.x = element_blank())
```

- Pico do ano de 2008 foi explicado anteriomente.

\newpage


## Atividade por Região

```{r}
write.csv(nm_division, "cnae_the.csv")



empresa_regiao =  function(zona){
  empresas_pi_atual|>
   left_join(empresas, "cnpj_basico")|>
    filter(id_municipio == 2211001)|>
    dplyr::mutate(bairro = stringi::stri_trans_general(str = bairro, id = "Latin-ASCII"),# remove acentos
                  bairro = str_trim(bairro, "right"),# remove espaços a direita
                  bairro = str_trim(bairro, "left"))|> # remove espaços a esqueda
    dplyr::left_join(bairros, by = c("bairro" = "Bairro"))|>
    dplyr::filter(Região == zona)|>
    dplyr::rename("cod_cnae" = "cnae_fiscal_principal")|>
    left_join(cnae, "cod_cnae")|>
    count(nm_secao, nm_divisao, nm_grupo, nm_classe, nm_cnae)|>
    replace_na(list(nm_secao = "Vazio", nm_divisao = "Vazio",
        nm_grupo = "Vazio", nm_classe = "Vazio",
        nm_cnae = "Vazio"))|>
    dplyr::mutate(tipo = fct_lump(nm_secao,12, other_level = "Outras")) %>% 
    dplyr::count(tipo) %>%
    dplyr::mutate(tipo = fct_reorder(str_wrap(tipo, 38), n))|>
    dplyr::mutate(prop = percent(n/sum(n)))|>
    ggplot(aes(x = tipo, y = n/1e3))+
    geom_col(fill = 'gold', alpha = .9, width = 0.9) +
      coord_flip() +
      geom_text(aes(label = prop), nudge_y = 0.015) +
      theme_minimal(7.25) +
      labs(x = "Atividade principal", 
           y = sprintf("Região: %s ", zona))+
      theme(axis.title.x = element_text(size = 20),
            axis.title.y = element_text(size = 20),
            axis.text.x = element_text(size = 10),
            axis.text.y = element_text(size = 10))
}

zonas = c("Central", "Zona Leste", "Zona Norte", "Zona Sudeste", "Zona Sul")

for (i in zonas){
  print(empresa_regiao(i))
}
```

\newpage

# Referências

 - https://blog.curso-r.com/posts/2019-09-20-qsacnpj/

 - https://github.com/georgevbsantiago/qsacnpj

 - https://basedosdados.org/dataset/br-me-cnpj?bdm_table=empresas
 
 - https://www.gov.br/receitafederal/pt-br/assuntos/orientacao-tributaria/cadastros/consultas/dados-publicos-cnpj